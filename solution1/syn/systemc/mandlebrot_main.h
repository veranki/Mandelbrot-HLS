// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mandlebrot_main_HH_
#define _mandlebrot_main_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mandlebrot_main_dbkb.h"
#include "mandlebrot_main_dcud.h"
#include "mandlebrot_main_ddEe.h"
#include "mandlebrot_main_seOg.h"

namespace ap_rtl {

struct mandlebrot_main : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<19> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<32> > res_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    mandlebrot_main(sc_module_name name);
    SC_HAS_PROCESS(mandlebrot_main);

    ~mandlebrot_main();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    mandlebrot_main_dbkb<1,5,64,64,64>* mandlebrot_main_dbkb_U1;
    mandlebrot_main_dcud<1,6,64,64,64>* mandlebrot_main_dcud_U2;
    mandlebrot_main_dcud<1,6,64,64,64>* mandlebrot_main_dcud_U3;
    mandlebrot_main_ddEe<1,1,64,64,1>* mandlebrot_main_ddEe_U4;
    mandlebrot_main_seOg<1,6,32,64>* mandlebrot_main_seOg_U5;
    sc_signal< sc_lv<63> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_161_p1;
    sc_signal< sc_lv<64> > reg_164;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > grp_fu_140_p2;
    sc_signal< sc_lv<64> > reg_169;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_lv<64> > grp_fu_134_p2;
    sc_signal< sc_lv<64> > reg_175;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_lv<32> > y_assign_cast3_fu_181_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > y_fu_192_p2;
    sc_signal< sc_lv<10> > y_reg_313;
    sc_signal< sc_lv<21> > tmp_cast_fu_198_p1;
    sc_signal< sc_lv<21> > tmp_cast_reg_318;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > ci_reg_323;
    sc_signal< sc_lv<32> > x_assign_cast2_fu_202_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<11> > x_fu_213_p2;
    sc_signal< sc_lv<11> > x_reg_336;
    sc_signal< sc_lv<64> > cr_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<1> > tmp_fu_219_p3;
    sc_signal< sc_lv<1> > tmp_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<10> > i_fu_227_p2;
    sc_signal< sc_lv<10> > i_reg_350;
    sc_signal< sc_lv<64> > tmp_9_i_reg_355;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<64> > grp_fu_147_p2;
    sc_signal< sc_lv<64> > tmp_i_6_reg_360;
    sc_signal< sc_lv<64> > tmp_1_i4_reg_365;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_lv<10> > y_assign_reg_74;
    sc_signal< sc_lv<1> > exitcond_fu_207_p2;
    sc_signal< sc_lv<11> > x_assign_reg_86;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<1> > tmp_5_fu_268_p2;
    sc_signal< sc_lv<10> > n_reg_98;
    sc_signal< sc_lv<64> > ap_phi_mux_zr_i_phi_fu_114_p4;
    sc_signal< sc_lv<64> > zr_i_reg_110;
    sc_signal< sc_lv<64> > zi_i_reg_122;
    sc_signal< sc_lv<64> > tmp_8_cast_fu_300_p1;
    sc_signal< sc_lv<64> > grp_fu_134_p0;
    sc_signal< sc_lv<64> > grp_fu_134_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_lv<64> > grp_fu_140_p0;
    sc_signal< sc_lv<64> > grp_fu_140_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_lv<32> > grp_fu_161_p0;
    sc_signal< sc_lv<64> > tmp_1_i4_to_int_fu_233_p1;
    sc_signal< sc_lv<11> > tmp_1_fu_236_p4;
    sc_signal< sc_lv<52> > tmp_2_fu_246_p1;
    sc_signal< sc_lv<1> > notrhs_fu_256_p2;
    sc_signal< sc_lv<1> > notlhs_fu_250_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_262_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_156_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_274_p1;
    sc_signal< sc_lv<20> > tmp_6_fu_283_p3;
    sc_signal< sc_lv<21> > tmp_7_cast_fu_291_p1;
    sc_signal< sc_lv<21> > tmp_8_fu_295_p2;
    sc_signal< sc_lv<2> > grp_fu_134_opcode;
    sc_signal< sc_lv<1> > exitcond1_fu_186_p2;
    sc_signal< sc_lv<63> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<63> ap_ST_fsm_state1;
    static const sc_lv<63> ap_ST_fsm_state2;
    static const sc_lv<63> ap_ST_fsm_state3;
    static const sc_lv<63> ap_ST_fsm_state4;
    static const sc_lv<63> ap_ST_fsm_state5;
    static const sc_lv<63> ap_ST_fsm_state6;
    static const sc_lv<63> ap_ST_fsm_state7;
    static const sc_lv<63> ap_ST_fsm_state8;
    static const sc_lv<63> ap_ST_fsm_state9;
    static const sc_lv<63> ap_ST_fsm_state10;
    static const sc_lv<63> ap_ST_fsm_state11;
    static const sc_lv<63> ap_ST_fsm_state12;
    static const sc_lv<63> ap_ST_fsm_state13;
    static const sc_lv<63> ap_ST_fsm_state14;
    static const sc_lv<63> ap_ST_fsm_state15;
    static const sc_lv<63> ap_ST_fsm_state16;
    static const sc_lv<63> ap_ST_fsm_state17;
    static const sc_lv<63> ap_ST_fsm_state18;
    static const sc_lv<63> ap_ST_fsm_state19;
    static const sc_lv<63> ap_ST_fsm_state20;
    static const sc_lv<63> ap_ST_fsm_state21;
    static const sc_lv<63> ap_ST_fsm_state22;
    static const sc_lv<63> ap_ST_fsm_state23;
    static const sc_lv<63> ap_ST_fsm_state24;
    static const sc_lv<63> ap_ST_fsm_state25;
    static const sc_lv<63> ap_ST_fsm_state26;
    static const sc_lv<63> ap_ST_fsm_state27;
    static const sc_lv<63> ap_ST_fsm_state28;
    static const sc_lv<63> ap_ST_fsm_state29;
    static const sc_lv<63> ap_ST_fsm_state30;
    static const sc_lv<63> ap_ST_fsm_state31;
    static const sc_lv<63> ap_ST_fsm_state32;
    static const sc_lv<63> ap_ST_fsm_state33;
    static const sc_lv<63> ap_ST_fsm_state34;
    static const sc_lv<63> ap_ST_fsm_state35;
    static const sc_lv<63> ap_ST_fsm_state36;
    static const sc_lv<63> ap_ST_fsm_state37;
    static const sc_lv<63> ap_ST_fsm_state38;
    static const sc_lv<63> ap_ST_fsm_state39;
    static const sc_lv<63> ap_ST_fsm_state40;
    static const sc_lv<63> ap_ST_fsm_state41;
    static const sc_lv<63> ap_ST_fsm_state42;
    static const sc_lv<63> ap_ST_fsm_state43;
    static const sc_lv<63> ap_ST_fsm_state44;
    static const sc_lv<63> ap_ST_fsm_state45;
    static const sc_lv<63> ap_ST_fsm_state46;
    static const sc_lv<63> ap_ST_fsm_state47;
    static const sc_lv<63> ap_ST_fsm_state48;
    static const sc_lv<63> ap_ST_fsm_state49;
    static const sc_lv<63> ap_ST_fsm_state50;
    static const sc_lv<63> ap_ST_fsm_state51;
    static const sc_lv<63> ap_ST_fsm_state52;
    static const sc_lv<63> ap_ST_fsm_state53;
    static const sc_lv<63> ap_ST_fsm_state54;
    static const sc_lv<63> ap_ST_fsm_state55;
    static const sc_lv<63> ap_ST_fsm_state56;
    static const sc_lv<63> ap_ST_fsm_state57;
    static const sc_lv<63> ap_ST_fsm_state58;
    static const sc_lv<63> ap_ST_fsm_state59;
    static const sc_lv<63> ap_ST_fsm_state60;
    static const sc_lv<63> ap_ST_fsm_state61;
    static const sc_lv<63> ap_ST_fsm_state62;
    static const sc_lv<63> ap_ST_fsm_state63;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_BFF0000000000000;
    static const sc_lv<64> ap_const_lv64_C004000000000000;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<64> ap_const_lv64_3F70000000000000;
    static const sc_lv<64> ap_const_lv64_4000000000000000;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<64> ap_const_lv64_4010000000000000;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_zr_i_phi_fu_114_p4();
    void thread_ap_ready();
    void thread_exitcond1_fu_186_p2();
    void thread_exitcond_fu_207_p2();
    void thread_grp_fu_134_opcode();
    void thread_grp_fu_134_p0();
    void thread_grp_fu_134_p1();
    void thread_grp_fu_140_p0();
    void thread_grp_fu_140_p1();
    void thread_grp_fu_161_p0();
    void thread_i_fu_227_p2();
    void thread_notlhs_fu_250_p2();
    void thread_notrhs_fu_256_p2();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp_1_fu_236_p4();
    void thread_tmp_1_i4_to_int_fu_233_p1();
    void thread_tmp_2_fu_246_p1();
    void thread_tmp_3_fu_262_p2();
    void thread_tmp_5_fu_268_p2();
    void thread_tmp_6_fu_283_p3();
    void thread_tmp_7_cast_fu_291_p1();
    void thread_tmp_7_fu_274_p1();
    void thread_tmp_8_cast_fu_300_p1();
    void thread_tmp_8_fu_295_p2();
    void thread_tmp_cast_fu_198_p1();
    void thread_tmp_fu_219_p3();
    void thread_x_assign_cast2_fu_202_p1();
    void thread_x_fu_213_p2();
    void thread_y_assign_cast3_fu_181_p1();
    void thread_y_fu_192_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
